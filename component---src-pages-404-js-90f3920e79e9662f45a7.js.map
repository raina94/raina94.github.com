{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/bio.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/profile-main.js","webpack:///./src/components/layout.js"],"names":["NotFoundPage","render","siteTitle","this","props","data","site","siteMetadata","title","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_2__","location","_components_seo__WEBPACK_IMPORTED_MODULE_3__","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","propTypes","PropTypes","object","string","isRequired","func","scale","rhythm","typography__WEBPACK_IMPORTED_MODULE_0__","typography","Typography","baseFontSize","baseLineHeight","headerFontFamily","bodyFontFamily","options","m","module","exports","require","default","bioQuery","Bio","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","author","style","display","gatsby_image__WEBPACK_IMPORTED_MODULE_4___default","fixed","avatar","childImageSharp","alt","marginRight","marginBottom","marginTop","minWidth","borderRadius","imgStyle","flexDirection","margin","fontWeight","fontSize","_public_static_d_3932108081_json__WEBPACK_IMPORTED_MODULE_1__","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","keywords","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","concat","length","join","defaultProps","array","arrayOf","ProfileMain","react_default","className","gatsby_browser_entry","boxShadow","textDecoration","color","to","bio","Layout","_this","_React$Component","call","state","handleScroll","bind","assertThisInitialized_default","setState","scroll","window","scrollY","componentDidMount","header","document","querySelector","top","offsetTop","height","offsetHeight","addEventListener","componentWillUnmount","removeEventListener","_this$props"],"mappings":"+LAMMA,4FACJC,OAAA,WAAS,IAEDC,EADWC,KAAKC,MAAdC,KACeC,KAAKC,aAAaC,MAEzC,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,SAAUV,KAAKC,MAAMS,SAAUL,MAAON,GAC5CO,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAKN,MAAM,mBACXC,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,8CATmBI,IAAMC,WAelBhB,YAER,IAAMiB,EAAS,+CCvBtBC,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,GAAAK,EAAAL,EAAAM,EAAAF,GAAAG,EAAAP,EAAA,GAAAQ,EAAAR,EAAAM,EAAAC,GAAAE,EAAAT,EAAA,IAAAU,EAAAV,EAAAM,EAAAG,GAAAT,EAAAC,EAAAC,EAAA,sBAAAQ,EAAAlB,IAAAQ,EAAA,SAYMW,EAAqBd,IAAMe,cAAc,IAEzCT,EAAc,SAAAjB,GAAK,OACvBmB,EAAAb,EAAAC,cAACkB,EAAmBE,SAApB,KACG,SAAAC,GACC,OACE5B,EAAMC,MACL2B,EAAgB5B,EAAM6B,QAAUD,EAAgB5B,EAAM6B,OAAO5B,MAEtDD,EAAMH,QAAUG,EAAM8B,UAC5B9B,EAAMC,KAAOD,EAAMC,KAAKA,KAAO2B,EAAgB5B,EAAM6B,OAAO5B,MAGvDkB,EAAAb,EAAAC,cAAA,uCA4BfU,EAAYc,UAAY,CACtB9B,KAAM+B,IAAUC,OAChBJ,MAAOG,IAAUE,OAAOC,WACxBtC,OAAQmC,IAAUI,KAClBN,SAAUE,IAAUI,wCCzDtBtB,EAAAC,EAAAC,EAAA,sBAAAqB,IAAAvB,EAAAC,EAAAC,EAAA,sBAAAsB,IAAA,IAAAC,EAAAzB,EAAA,KAGM0B,EAAa,IAHnB1B,EAAAM,EAAAmB,GAGuBE,GAAW,CAChCC,aAAc,OACdC,eAAgB,MAChBC,iBAAkB,CAChB,gBAEFC,eAAgB,CAAC,sBASJR,EAA2BG,EAA3BH,MAAOC,EAAoBE,EAApBF,OAAoBE,EAAZM,6BClB9B,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,4GCsE/C,IAAMK,EAAQ,aAiBCC,IA1Ef,WACE,OACEC,EAAAhD,EAAAC,cAACgD,EAAA,EAAD,CACE1B,MAAOuB,EACPvD,OAAQ,SAAAI,GAAQ,IACNuD,EAAWvD,EAAKC,KAAKC,aAArBqD,OACR,OACEF,EAAAhD,EAAAC,cAAA,OACEkD,MAAO,CACLC,QAAO,SAGTJ,EAAAhD,EAAAC,cAACoD,EAAArD,EAAD,CACEsD,MAAO3D,EAAK4D,OAAOC,gBAAgBF,MACnCG,IAAKP,EACLC,MAAO,CACLO,YAAa1B,YAAO,IACpB2B,aAAc,OACdC,UAAW,OACXC,SAAU,GACVC,aAAY,QAEdC,SAAU,CACRD,aAAY,SAGhBd,EAAAhD,EAAAC,cAAA,OACEkD,MAAO,CACLC,QAAO,OACPY,cAAa,WAGfhB,EAAAhD,EAAAC,cAAA,KACEkD,MAAO,CACLc,OAAQ,EACRC,WAAY,IACZC,SAAU,WAGXjB,GAEHF,EAAAhD,EAAAC,cAAA,KACEkD,MAAO,CACLc,OAAQ,IAFZ,8DAvCVtE,KAAAyE,uGCTEC,EAAmB,SAAAC,GAAkB,IAAfnE,EAAemE,EAAfnE,SACpBoE,EAAgBC,UAAOC,4BAA4BtE,EAASuE,UAClE,OAAOrE,IAAMJ,cAAc0E,IAApBC,OAAAC,OAAA,CACL1E,WACAoE,iBACGA,EAAcO,QAIrBT,EAAiB5C,UAAY,CAC3BtB,SAAUuB,IAAUqD,MAAM,CACxBL,SAAUhD,IAAUE,OAAOC,aAC1BA,YAGUwC,qgDCTf,SAASW,EAATV,GAA2D,IAA5CW,EAA4CX,EAA5CW,YAAaC,EAA+BZ,EAA/BY,KAAMC,EAAyBb,EAAzBa,KAAMC,EAAmBd,EAAnBc,SAAUtF,EAASwE,EAATxE,MACxCF,EADiDyF,EAAA1F,KACjDC,KAcF0F,EAAkBL,GAAerF,EAAKC,aAAaoF,YAEzD,OACElF,EAAAC,EAAAC,cAACsF,EAAAvF,EAAD,CACEwF,eAAgB,CACdN,QAEFpF,MAAOA,EACP2F,cAAa,QAAU7F,EAAKC,aAAaC,MACzCqF,KAAM,CACJ,CACEO,KAAI,cACJC,QAASL,GAEX,CACEM,SAAQ,WACRD,QAAS7F,GAEX,CACE8F,SAAQ,iBACRD,QAASL,GAEX,CACEM,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAAS/F,EAAKC,aAAaqD,QAE7B,CACEwC,KAAI,gBACJC,QAAS7F,GAEX,CACE4F,KAAI,sBACJC,QAASL,IAGVO,OACCT,EAASU,OAAS,EACd,CACEJ,KAAI,WACJC,QAASP,EAASW,KAAT,OAEX,IAELF,OAAOV,KAKhBH,EAAIgB,aAAe,CACjBd,KAAI,KACJC,KAAM,GACNC,SAAU,IAGZJ,EAAIvD,UAAY,CACdwD,YAAavD,IAAUE,OACvBsD,KAAMxD,IAAUE,OAChBuD,KAAMzD,IAAUuE,MAChBb,SAAU1D,IAAUwE,QAAQxE,IAAUE,QACtC9B,MAAO4B,IAAUE,OAAOC,YAGXmD,uSC9DAmB,MA7Bf,SAAqBzG,GACnB,OACE0G,EAAApG,EAAAC,cAAA,UAAQoG,UAAU,wBAChBD,EAAApG,EAAAC,cAAA,OAAKoG,UAAU,QACVlD,MAAKyB,OAAAC,OAAA,GACA9C,YAAM,OAEdqE,EAAApG,EAAAC,cAACqG,EAAA,EAAD,CACEnD,MAAO,CACLoD,UAAS,OACTC,eAAc,OACdC,MAAK,WAEPC,GAAE,KAEFN,EAAApG,EAAAC,cAAA,iBACAmG,EAAApG,EAAAC,cAAA,mBACAmG,EAAApG,EAAAC,cAAA,mBAGJmG,EAAApG,EAAAC,cAAA,OAAKoG,UAAU,mBACbD,EAAApG,EAAAC,cAAA,OAAKoG,UAAU,WACbD,EAAApG,EAAAC,cAAC0G,EAAA,EAAD,UCvBJC,cACJ,SAAAA,EAAYlH,GAAO,IAAAmH,EAAA,OACjBA,EAAAC,EAAAC,KAAAtH,KAAMC,IAAND,MAEKuH,MAAQ,GACbH,EAAKI,aAAeJ,EAAKI,aAAaC,KAAlBC,IAAAN,IAJHA,sCAOnBI,aAAA,WACExH,KAAK2H,SAAS,CAAEC,OAAQC,OAAOC,aAGjCC,kBAAA,WACE,IAAMC,EAASC,SAASC,cAAc,UACtClI,KAAK2H,SAAS,CAAEQ,IAAKH,EAAOI,UAAWC,OAAQL,EAAOM,eACtDT,OAAOU,iBAAiB,SAAUvI,KAAKwH,cAAc,MAGvDgB,qBAAA,WACEX,OAAOY,oBAAoB,SAAUzI,KAAKwH,iBAG5C1H,OAAA,WAAS,IAKHkI,EALGU,EAC+B1I,KAAKC,MAAnCS,EADDgI,EACChI,SAAUL,EADXqI,EACWrI,MAAO0B,EADlB2G,EACkB3G,SAEnB8B,EAAS7D,KAAKuH,MAAMK,OAAS5H,KAAKuH,MAAMY,IAC5C,yBAA2B,GAqB7B,OAjBEH,EANY,MAKVtH,EAASuE,SACFyB,IAGPC,EAAApG,EAAAC,cAAA,UAAQoG,UAAS,wBAA0B/C,GACzC8C,EAAApG,EAAAC,cAACqG,EAAA,EAAD,CACEnD,MAAO,CACLoD,UAAS,OACTC,eAAc,OACdC,MAAK,WAEPC,GAAE,KAED5G,IAMPsG,EAAApG,EAAAC,cAAA,OACEkD,MAAO,CACL2E,OAAQ,SAGTL,EACDrB,EAAApG,EAAAC,cAAA,QAAMoG,UAAU,eACb7E,GAEH4E,EAAApG,EAAAC,cAAA,6DAzDaI,IAAMC,WAiEZsG","file":"component---src-pages-404-js-90f3920e79e9662f45a7.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nclass NotFoundPage extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"404: Not Found\" />\n        <h1>여기는 아무고토 없는 곳..</h1>\n        <p>좌측 상단의 로고를 눌러 메인페이지로 돌아가보아요!</p>\n      </Layout>\n    )\n  }\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import Typography from \"typography\"\n\n\nconst typography = new Typography({\n  baseFontSize: '16px',\n  baseLineHeight: 1.666,\n  headerFontFamily: [\n    'Nanum Gothic'\n  ],\n  bodyFontFamily: ['Nanum Gothic'],\n})\n\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport const { scale, rhythm, options } = typography\nexport default typography\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","/**\n * Bio component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Image from \"gatsby-image\"\n\nimport { rhythm } from \"../utils/typography\"\n\nfunction Bio() {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { author } = data.site.siteMetadata\n        return (\n          <div\n            style={{\n              display: `flex`,\n            }}\n          >\n            <Image\n              fixed={data.avatar.childImageSharp.fixed}\n              alt={author}\n              style={{\n                marginRight: rhythm(1 / 2),\n                marginBottom: \"auto\",\n                marginTop: \"auto\",\n                minWidth: 50,\n                borderRadius: `100%`,\n              }}\n              imgStyle={{\n                borderRadius: `50%`,\n              }}\n            />\n            <div\n              style={{\n                display: `flex`,\n                flexDirection: `column`,\n              }}\n            >\n              <p\n                style={{\n                  margin: 0,\n                  fontWeight: 900,\n                  fontSize: \"1.3rem\",\n                }}\n              >\n                {author}\n              </p>\n              <p\n                style={{\n                  margin: 0,\n                }}\n              >\n                개발문서 읽는 게 즐거운 프런트 엔드 개발자입니다. 누군가에게\n                도움이 되길 믿으며 기록을 남깁니다.\n              </p>\n            </div>\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/profile.jpeg/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n      }\n    }\n  }\n`\n\nexport default Bio\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from 'react';\nimport { scale } from \"../utils/typography\"\nimport { Link } from \"gatsby\"\nimport Bio from \"./bio\"\n\n\nfunction ProfileMain(props) {\n  return (\n    <header className='section__header main'>\n      <div className=\"title\"\n           style={{\n             ...scale(1.5),\n           }}>\n        <Link\n          style={{\n            boxShadow: `none`,\n            textDecoration: `none`,\n            color: `inherit`,\n          }}\n          to={`/`}\n        >\n          <p>나 같은</p>\n          <p>사람을 위한</p>\n          <p>개발로그</p>\n        </Link>\n      </div>\n      <div className=\"profile-section\">\n        <div className=\"profile\">\n          <Bio/>\n        </div>\n      </div>\n    </header>\n  );\n}\n\nexport default ProfileMain","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport ProfileMain from \"./profile-main\";\n\nclass Layout extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {}\n    this.handleScroll = this.handleScroll.bind(this)\n  }\n\n  handleScroll() {\n    this.setState({ scroll: window.scrollY })\n  }\n\n  componentDidMount() {\n    const header = document.querySelector(\"header\")\n    this.setState({ top: header.offsetTop, height: header.offsetHeight })\n    window.addEventListener(\"scroll\", this.handleScroll, true)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"scroll\", this.handleScroll)\n  }\n\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    const fixed = (this.state.scroll > this.state.top) ?\n      \"section__header--fixed\" : \"\"\n    let header\n\n    if (location.pathname === rootPath) {\n      header = ProfileMain();\n    } else {\n      header = (\n        <header className={`section__header post ${fixed}`}>\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </header>\n      )\n    }\n    return (\n      <div\n        style={{\n          height: \"100%\",\n        }}\n      >\n        {header}\n        <main className='intro__main'>\n          {children}\n        </main>\n        <footer>\n          ©raina, Built with Gatsby-blog-starter\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n"],"sourceRoot":""}