{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["NotFoundPage","render","siteTitle","this","props","data","site","siteMetadata","title","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_2__","location","_components_seo__WEBPACK_IMPORTED_MODULE_3__","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","propTypes","PropTypes","object","string","isRequired","func","scale","rhythm","typography__WEBPACK_IMPORTED_MODULE_0__","typography","Typography","baseFontSize","baseLineHeight","headerFontFamily","bodyFontFamily","options","m","module","exports","require","default","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Layout","header","_this$props","react__WEBPACK_IMPORTED_MODULE_2___default","className","style","marginBottom","marginTop","gatsby__WEBPACK_IMPORTED_MODULE_3__","boxShadow","textDecoration","color","to","marginLeft","marginRight","maxWidth","padding","SEO","description","lang","meta","keywords","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","array","arrayOf"],"mappings":"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","file":"component---src-pages-404-js-59f32a83743577b34c99.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nclass NotFoundPage extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"404: Not Found\" />\n        <h1>여기는 아무고토 없는 곳..</h1>\n        <p>좌측 상단의 로고를 눌러 메인페이지로 돌아가보아요!</p>\n      </Layout>\n    )\n  }\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import Typography from \"typography\"\n\n\nconst typography = new Typography({\n  baseFontSize: '16px',\n  baseLineHeight: 1.666,\n  headerFontFamily: [\n    'Nanum Myeongjo'\n  ],\n  bodyFontFamily: ['Nanum Gothic Coding'],\n})\n\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport const { scale, rhythm, options } = typography\nexport default typography\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport { rhythm, scale } from \"../utils/typography\"\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header\n\n    if (location.pathname === rootPath) {\n      header = (\n        <header className={`section__header`}>\n          <div>\n            <h1\n              style={{\n                ...scale(1.5),\n                marginBottom: rhythm(1.5),\n                marginTop: 0,\n              }}\n            >\n              <Link\n                style={{\n                  boxShadow: `none`,\n                  textDecoration: `none`,\n                  color: `inherit`,\n                }}\n                to={`/`}\n              >\n                {title}✨\n              </Link>\n            </h1>\n          </div>\n          <div>\n            <ul>\n              <li>\n                <Link to={`/til`}>\n                  TIL\n                </Link>\n              </li>\n              <li>\n                <Link to={`/til`}>\n                  portfolio\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </header>\n      )\n    } else {\n      header = (\n        <header className={`section__header`}>\n          <h3\n            style={{\n              marginTop: 0,\n            }}\n          >\n            <Link\n              style={{\n                boxShadow: `none`,\n                textDecoration: `none`,\n                color: `inherit`,\n              }}\n              to={`/`}\n            >\n              {title}✨\n            </Link>\n          </h3>\n        </header>\n      )\n    }\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(24),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        {header}\n        <main>{children}</main>\n        <footer>\n          raina + gatsby\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}