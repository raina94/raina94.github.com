{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/bio.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/profile-main.js","webpack:///./src/components/layout.js"],"names":["BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_4__","location","_components_seo__WEBPACK_IMPORTED_MODULE_5__","keywords","className","map","_ref","node","frontmatter","fields","slug","gatsby__WEBPACK_IMPORTED_MODULE_3__","style","boxShadow","to","key","marginBottom","rhythm","Object","assign","scale","lineHeight","marginRight","date","dangerouslySetInnerHTML","__html","description","excerpt","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","propTypes","PropTypes","object","string","isRequired","func","typography__WEBPACK_IMPORTED_MODULE_0__","typography","Typography","baseFontSize","baseLineHeight","headerFontFamily","bodyFontFamily","options","m","module","exports","require","default","bioQuery","Bio","author","display","gatsby_image__WEBPACK_IMPORTED_MODULE_4___default","fixed","avatar","childImageSharp","alt","marginTop","minWidth","borderRadius","imgStyle","flexDirection","margin","fontWeight","fontSize","_public_static_d_3932108081_json__WEBPACK_IMPORTED_MODULE_1__","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape","SEO","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","concat","length","join","defaultProps","array","arrayOf","ProfileMain","react_default","gatsby_browser_entry","textDecoration","color","bio","Layout","_this","_React$Component","call","state","handleScroll","bind","assertThisInitialized_default","setState","scroll","window","scrollY","componentDidMount","header","document","querySelector","top","offsetTop","height","offsetHeight","addEventListener","componentWillUnmount","removeEventListener","_this$props"],"mappings":"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","file":"component---src-pages-index-js-7a1fd1affc51f968a285.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm, scale } from \"../utils/typography\"\nimport \"../utils/variables.scss\"\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title=\"All posts\"\n          keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n        />\n        <div className='post-section'>\n          {posts.map(({ node }) => {\n            const title = node.frontmatter.title || node.fields.slug\n            return (\n              <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                <div\n                  className={`section__main`}\n                  key={node.fields.slug}>\n                  <h3\n                    style={{\n                      marginBottom: rhythm(1 / 4),\n                    }}\n                  >\n                    {title}\n                  </h3>\n                  <small>\n                <span className=\"material-icons\"\n                      style={{\n                        ...scale(-1 / 5),\n                        lineHeight: \"auto\",\n                        marginRight: \"4px\",\n                      }}>\n                  calendar_today\n                </span>\n                    {node.frontmatter.date}\n                  </small>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: node.frontmatter.description || node.excerpt,\n                    }}\n                  />\n                </div>\n              </Link>\n            )\n          })}\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import Typography from \"typography\"\n\n\nconst typography = new Typography({\n  baseFontSize: '16px',\n  baseLineHeight: 1.666,\n  headerFontFamily: [\n    'Nanum Gothic'\n  ],\n  bodyFontFamily: ['Nanum Gothic'],\n})\n\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport const { scale, rhythm, options } = typography\nexport default typography\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","/**\n * Bio component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Image from \"gatsby-image\"\n\nimport { rhythm } from \"../utils/typography\"\n\nfunction Bio() {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { author } = data.site.siteMetadata\n        return (\n          <div\n            style={{\n              display: `flex`,\n            }}\n          >\n            <Image\n              fixed={data.avatar.childImageSharp.fixed}\n              alt={author}\n              style={{\n                marginRight: rhythm(1 / 2),\n                marginBottom: \"auto\",\n                marginTop: \"auto\",\n                minWidth: 50,\n                borderRadius: `100%`,\n              }}\n              imgStyle={{\n                borderRadius: `50%`,\n              }}\n            />\n            <div\n              style={{\n                display: `flex`,\n                flexDirection: `column`,\n              }}>\n              <p style={{\n                margin: 0,\n                fontWeight: 900,\n                fontSize: '1.3rem'\n              }}>\n                {author}\n              </p>\n              <p style={{\n                margin: 0,\n              }}>\n                개발문서 읽는 게 즐거운 프런트 엔드 개발자입니다.\n                배운 내용을 나와 같은 사람들에게 공유하고 싶어서 블로그를 꾸려봤습니다.\n              </p>\n            </div>\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/profile.jpeg/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n      }\n    }\n  }\n`\n\nexport default Bio\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from 'react';\nimport { scale } from \"../utils/typography\"\nimport { Link } from \"gatsby\"\nimport Bio from \"./bio\"\n\n\nfunction ProfileMain(props) {\n  return (\n    <header className='section__header main'>\n      <div className=\"title\"\n           style={{\n             ...scale(1.5),\n           }}>\n        <Link\n          style={{\n            boxShadow: `none`,\n            textDecoration: `none`,\n            color: `inherit`,\n          }}\n          to={`/`}\n        >\n          <p>나 같은</p>\n          <p>사람을 위한</p>\n          <p>개발로그</p>\n        </Link>\n      </div>\n      <div className=\"profile-section\">\n        <div className=\"profile\">\n          <Bio/>\n        </div>\n      </div>\n    </header>\n  );\n}\n\nexport default ProfileMain","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport ProfileMain from \"./profile-main\";\n\nclass Layout extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {}\n    this.handleScroll = this.handleScroll.bind(this)\n  }\n\n  handleScroll() {\n    this.setState({ scroll: window.scrollY })\n  }\n\n  componentDidMount() {\n    const header = document.querySelector(\"header\")\n    this.setState({ top: header.offsetTop, height: header.offsetHeight })\n    window.addEventListener(\"scroll\", this.handleScroll, true)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"scroll\", this.handleScroll)\n  }\n\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    const fixed = (this.state.scroll > this.state.top) ?\n      \"section__header--fixed\" : \"\"\n    let header\n\n    if (location.pathname === rootPath) {\n      header = ProfileMain();\n    } else {\n      header = (\n        <header className={`section__header post ${fixed}`}>\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </header>\n      )\n    }\n    return (\n      <div\n        style={{\n          height: \"100%\",\n        }}\n      >\n        {header}\n        <main className='intro__main'>\n          {children}\n        </main>\n        <footer>\n          ©raina, Built with Gatsby-blog-starter\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n"],"sourceRoot":""}